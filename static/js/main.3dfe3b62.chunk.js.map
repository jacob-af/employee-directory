{"version":3,"sources":["utils/API.js","components/Person.js","components/PersonTable.js","components/Dropdown.js","components/Pagination.js","components/PersonnelContainer.js","App.js","reportWebVitals.js","index.js"],"names":["API","search","axios","get","Person","props","person","name","title","first","last","dob","age","location","city","country","PersonTable","bundle","formatPersonnel","currentPage","recordsPerPage","className","slice","map","index","Dropdown","array","callback","children","onChange","e","target","value","item","Pagination","changePage","changeNumberOfRecords","personnel","style","opacity","onClick","data-value","Math","ceil","length","PersonnelContainer","useState","setPersonnel","sort","setSort","countryFilter","setCountryFilter","ageFilter","setAgeFilter","setCurrentPage","setRecordsPerPage","useEffect","then","res","console","log","data","results","result","catch","err","filter","filterByAge","a","b","sortArray","event","getAttribute","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dfe3b62.chunk.js","sourcesContent":["import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=500&nat=us,gb,dk,de,fr\";\n\nconst API = {\n  search: function () {\n    return axios.get(BASEURL);\n  }\n};\n\nexport default API;\n","const Person = props => {\n  return (\n    <tr>\n      <td>{props.person.name.title}</td>\n      <td>{props.person.name.first}</td>\n      <td>{props.person.name.last}</td>\n      <td>{props.person.dob.age}</td>\n      <td>{props.person.location.city}</td>\n      <td>{props.person.location.country}</td>\n    </tr>\n  );\n};\n\nexport default Person;\n","import Person from \"./Person.js\";\n\nconst PersonTable = ({\n  bundle: { formatPersonnel, currentPage, recordsPerPage }\n}) => {\n  return (\n    <div className=\"row\">\n      <table className=\"table table-bordered table-dark table-hover table-striped\">\n        <thead>\n          <tr>\n            <td></td>\n            <td>First Name</td>\n            <td>Last Name</td>\n            <td>Age</td>\n            <td>City</td>\n            <td>Country</td>\n          </tr>\n        </thead>\n        <tbody>\n          {formatPersonnel()[0] ? (\n            formatPersonnel()\n              .slice(\n                recordsPerPage * (currentPage - 1),\n                recordsPerPage * currentPage\n              )\n              .map(person => <Person key={person.index} person={person} />)\n          ) : (\n            <tr>\n              <td>{\"Loading\"}</td>\n              <td>{\"...\"}</td>\n              <td>{\"...\"}</td>\n              <td>{\"...\"}</td>\n              <td>{\"...\"}</td>\n              <td>{\"...\"}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PersonTable;\n","const Dropdown = ({ array, callback, children }) => {\n  return (\n    <select onChange={e => callback(e.target.value)} className=\"dropdown\">\n      <option value=\"none\">{children}</option>\n      {array.map((item, index) => (\n        <option value={item} key={index}>\n          {item}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default Dropdown;\n","import Dropdown from \"./Dropdown.js\";\n\nconst Pagination = ({\n  bundle: {\n    changePage,\n    changeNumberOfRecords,\n    currentPage,\n    recordsPerPage,\n    formatPersonnel\n  }\n}) => {\n  const personnel = formatPersonnel();\n  return (\n    <div className=\"row\">\n      <div className=\"col-2\">\n        <button\n          style={{\n            opacity: currentPage > 1 ? 1 : 0\n          }}\n          onClick={changePage}\n          className=\"card-btn\"\n          data-value=\"back\"\n        >{`<--Back`}</button>\n      </div>\n      <div className=\"col-6\">\n        <p className=\"text-center\">\n          Page {currentPage} of {Math.ceil(personnel.length / recordsPerPage)}\n        </p>\n      </div>\n      <div className=\"col-2\">\n        <Dropdown callback={changeNumberOfRecords} array={[15, 20, 25, 50]}>\n          10\n        </Dropdown>\n      </div>\n      <div className=\"col-2\">\n        <button\n          style={{\n            opacity: currentPage < personnel.length / recordsPerPage ? 1 : 0\n          }}\n          onClick={changePage}\n          className=\"card-btn\"\n          data-value=\"next\"\n        >\n          {`Next-->`}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import API from \"../utils/API\";\nimport { useState, useEffect } from \"react\";\nimport PersonTable from \"./PersonTable.js\";\n\nimport Dropdown from \"./Dropdown.js\";\nimport Pagination from \"./Pagination.js\";\n\nconst PersonnelContainer = () => {\n  const [personnel, setPersonnel] = useState([]);\n  const [sort, setSort] = useState(\"none\");\n  const [countryFilter, setCountryFilter] = useState(\"none\");\n  const [ageFilter, setAgeFilter] = useState(\"none\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recordsPerPage, setRecordsPerPage] = useState(10);\n\n  const sortOptions = [\n    \"First Name (ASC)\",\n    \"First Name (DESC)\",\n    \"Last Name (ASC)\",\n    \"Last Name (DESC)\",\n    \"Age (ASC)\",\n    \"Age (DESC)\"\n  ];\n  const countries = [\n    \"United States\",\n    \"France\",\n    \"Germany\",\n    \"Denmark\",\n    \"United Kingdom\"\n  ];\n  const ages = [\"21-35\", \"36-45\", \"46-55\", \"56-65\", \"66+\"];\n\n  useEffect(() => {\n    API.search()\n      .then(res => {\n        console.log(res.data.results);\n        const results = res.data.results.map((result, index) => {\n          result.index = index;\n          return result;\n        });\n        setPersonnel(results);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  const sortArray = () => {\n    switch (sort) {\n      case \"First Name (ASC)\":\n        return (a, b) => (a.name.first > b.name.first ? 1 : -1);\n      case \"First Name (DESC)\":\n        return (a, b) => (a.name.first < b.name.first ? 1 : -1);\n      case \"Last Name (ASC)\":\n        return (a, b) => (a.name.last > b.name.last ? 1 : -1);\n      case \"Last Name (DESC)\":\n        return (a, b) => (a.name.last < b.name.last ? 1 : -1);\n      case \"Age (ASC)\":\n        return (a, b) => (a.dob.age > b.dob.age ? 1 : -1);\n      case \"Age (DESC)\":\n        return (a, b) => (a.dob.age < b.dob.age ? 1 : -1);\n      case \"none\":\n      default:\n        return (a, b) => (a.index > b.index ? 1 : -1);\n    }\n  };\n\n  const changeCountryFilter = value => {\n    setCountryFilter(value);\n    setCurrentPage(1);\n  };\n\n  const changeAgeFilter = value => {\n    setAgeFilter(value);\n    setCurrentPage(1);\n  };\n\n  const filterByCountry = () => {\n    if (countryFilter === \"none\") {\n      return person => person;\n    } else {\n      return person => person.location.country === countryFilter;\n    }\n  };\n\n  const filterByAge = () => {\n    switch (ageFilter) {\n      case \"21-35\":\n        return person => person.dob.age >= 21 && person.dob.age <= 35;\n      case \"36-45\":\n        return person => person.dob.age >= 36 && person.dob.age <= 45;\n      case \"46-55\":\n        return person => person.dob.age >= 46 && person.dob.age <= 55;\n      case \"56-65\":\n        return person => person.dob.age >= 56 && person.dob.age <= 65;\n      case \"66+\":\n        return person => person.dob.age >= 66;\n      case \"none\":\n      default:\n        return person => person;\n    }\n  };\n\n  const formatPersonnel = () =>\n    personnel.filter(filterByCountry()).filter(filterByAge()).sort(sortArray());\n\n  const changePage = event => {\n    const btnName = event.target.getAttribute(\"data-value\");\n    if (btnName === \"next\") {\n      if (currentPage < personnel.length / recordsPerPage) {\n        setCurrentPage(currentPage + 1);\n      }\n    } else {\n      if (currentPage > 1) {\n        setCurrentPage(currentPage - 1);\n      }\n    }\n  };\n\n  const changeNumberOfRecords = value => {\n    if (value === \"none\") {\n      setRecordsPerPage(10);\n    } else {\n      setRecordsPerPage(value);\n    }\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center header\">Employee Directory</h1>\n      <p className=\"text-center\">\n        A randomly generated list of employees for you to sort and filter\n      </p>\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <Dropdown callback={setSort} array={sortOptions}>\n            {sort === \"none\" ? \"Sort by:\" : \"(none)\"}\n          </Dropdown>\n        </div>\n        <div className=\"col-5\">\n          <Dropdown callback={changeCountryFilter} array={countries}>\n            {countryFilter === \"none\" ? \"Filter by Country\" : \"(none)\"}\n          </Dropdown>\n        </div>\n        <div className=\"col-4 dropdown\">\n          <Dropdown callback={changeAgeFilter} array={ages}>\n            {ageFilter === \"none\" ? \"Filter by Age\" : \"(none)\"}\n          </Dropdown>\n        </div>\n      </div>\n\n      <Pagination\n        bundle={{\n          changePage,\n          changeNumberOfRecords,\n          currentPage,\n          recordsPerPage,\n          formatPersonnel\n        }}\n      />\n\n      <PersonTable bundle={{ currentPage, recordsPerPage, formatPersonnel }} />\n    </div>\n  );\n};\n\nexport default PersonnelContainer;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport PersonnelContainer from \"./components/PersonnelContainer.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PersonnelContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}